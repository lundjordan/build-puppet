@echo off

SET MOZBUILDDIR=C:\mozilla-build
SET MOZILLABUILD=%MOZBUILDDIR%
echo "MozillaBuild directory: %MOZBUILDDIR%"

REM set BUILDBOT_PATH, the path to the active Buildbot virtualenv
call "C:/mozilla-build/bbpath.bat"
echo "Buildbot virtualenv: %BUILDBOT_PATH%"

set log="c:\tmp\buildbot-startup.log"

REM Use the "new" moztools-static
set MOZ_TOOLS=%MOZBUILDDIR%\moztools-x64

REM append moztools to PATH
SET PATH=%PATH%;%MOZ_TOOLS%\bin

cd "%USERPROFILE%"

echo Waiting for puppet to complete

:FileCheck
echo Checking for completetion of PuppetRun.bat.
IF exist <%= @puppet_semaphore %> (GOTO RubyCheck)
echo Puppet run has not completed; waiting
timeout 5
GOTO FileCheck

:RubyCheck
echo Checking that Ruby.exe is no longer running.
tasklist /fi "imagename eq ruby.exe" |find "ruby.exe"
if errorlevel 1 GOTO start
echo Ruby.exe has not completed; waiting
timeout 5
GOTO RubyCheck

:start
REM A temporary terrible hack to get pass hardcoding in mozharness for a deprecated path
REM Once that is addressed this should be removed
REM Ref Bug 1162230
REM the hack is here because the link command needs to be rerun on each boot

if not exist C:\mozilla-build\buildbotve mkdir C:\mozilla-build\buildbotve
ln -s C:\mozilla-build\virtualenv.py C:\mozilla-build\buildbotve\virtualenv.py

echo "%date% %time% - About to run runslave.py"

REM running this via 'bash' is critical - bash adds a bunch of items to PATH
REM which the build steps expect to find.  We pass the --twistd-cmd pointing
REM to the appropriate twistd executable for the active Buildbot version
"%MOZILLABUILD%\msys\bin\bash" --login -c "'%BUILDBOT_PATH%\Scripts\python' /c/programdata/puppetagain/runslave.py --twistd-cmd '%BUILDBOT_PATH%\Scripts\twistd.py'"

echo "%date% %time% - runslave.py finished"

REM Delete the puppet semaphore so that on reboot we don't think it's started
del <%= @puppet_semaphore %>
