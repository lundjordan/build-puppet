# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

<VirtualHost *:443>
        # the server name and alias need to be set correctly here, corresponding do those
        # in the cert
        ServerName <%= scope.lookupvar('::fqdn') %>
        ServerAlias puppet

        SSLEngine on
        SSLProtocol -ALL +SSLv3 +TLSv1
        SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP

        SSLCertificateFile <%= scope.lookupvar('puppetmaster::ssl::master_cert') %>
        SSLCertificateKeyFile <%= scope.lookupvar('puppetmaster::ssl::master_key') %>
        # include the intermediate cert (this host's CA)
        SSLCertificateChainFile <%= scope.lookupvar('puppetmaster::ssl::master_ca_cert') %>
        SSLCACertificatePath <%= scope.lookupvar('puppetmaster::ssl::certdir') %>
        SSLCARevocationPath <%= scope.lookupvar('puppetmaster::ssl::certdir') %>

        SSLVerifyClient optional
        SSLVerifyDepth  2
        SSLOptions +StdEnvVars

        DocumentRoot <%= scope.lookupvar('puppetmaster::settings::data_root') %>

        # /repos is handled with directory permission, below

        # path to the deployment CGI
        ScriptAlias /deploy <%= scope.lookupvar('puppetmaster::settings::deploy_dir') %>/cgi-bin
        <Location /deploy>
            AuthType Basic
            AuthName "System Deployment"
            AuthUserFile /etc/puppet/deploy.htpasswd
            Require user deploy
        </Location>
</VirtualHost>

# Unencrypted access for packages
<VirtualHost *:80>
        DocumentRoot /data

        # /repos is handled with directory permission, below

        # deployment CGI
        <Location /deploy>
            Order Allow,Deny
            Deny from all
        </Location>
</VirtualHost>

# directory permissions
<Directory /data/>
        Options None FollowSymLinks Indexes
        AllowOverride None
        Order allow,deny
        allow from all
</Directory>

# NuGet repo redirection rules
<Directory /data/repos/nuget/>
        # override for /data/repos/nuget/.htaccess which is regenerated when there are changes to the packages folder
        AllowOverride All

        # static redirects that don't change when the package folder is modified
        RedirectMatch 302 ^(.*)/api/v2/package/([^/]+)/([^/]+)/?$ $1/nupkg/$2.$3.nupkg
        RedirectMatch 301 ^(.*)/api/v2/Packages/?$ $1/Packages
        RedirectMatch 301 ^(.*)/packages/?$ $1/html/index.html
        RedirectMatch 301 ^(.*)/packages/([^/]+)/([^/]+)/?$ $1/html/$1.$2.html
</Directory>