#!/bin/sh

### Add swap file
# chkconfig: 12345 60 01
# description: add swap file

### BEGIN INIT INFO
# Provides:          add_swap
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     1 2 3 4 5
# Default-Stop:      0 6
# Short-Description: add_swap
# Description:       add_swap
### END INIT INFO

PATH="/sbin:/bin:/usr/sbin:/usr/bin"

DEFAULT_SWAP_FILE="/swap_file"
MIN_MEMORY_SIZE_GB=12
MIN_MEMORY_SIZE_KB=$(($MIN_MEMORY_SIZE_GB * 1024 * 1024))
MEMORY_SIZE_KB="$(grep ^MemTotal: /proc/meminfo | awk '{print $2}')"
SWAP_SIZE="4G"

set -e

log(){
    logger -s -t swap_setup -- $*
}


if [ -z $MEMORY_SIZE_KB ]; then
    log "Unable to detect RAM available, adding swap..."
elif [ $MEMORY_SIZE_KB -gt $MIN_MEMORY_SIZE_KB ]; then
    # check if we need a swap file; if not, exit without error
    log "No swap required, $MEMORY_SIZE_KB KB mem available"
    exit 0
fi

main(){
    SWAP_FILE="$(get_swap_file)"
    log "Creating a swap file $SWAP_FILE"
    fallocate -l "$SWAP_SIZE" "$SWAP_FILE" || true
    log "Fixing permissions"
    chmod 600 "$SWAP_FILE"
    chown root: "$SWAP_FILE"

    log "Formatting"
    mkswap "$SWAP_FILE" || true
    log "Enabling swap"
    swapon "$SWAP_FILE"
}

get_swap_file(){
    mounts=$(grep ^/ /etc/mtab | grep ext4 | awk '{print $2}')
    for m in $mounts; do
        case "$m" in
            # Known SSD mount points
            /builds*|/mnt/*)
                echo -n "$m/swap_file"
                return
                ;;
        esac
    done
    # Fallback to something that always exists
    echo -n $DEFAULT_SWAP_FILE
}

case "$1" in
    start)
        main
        ;;
    status)
        swapon -s | grep -q ^$(get_swap_file)
        ;;
    *)
        log "Action not supported"
        ;;
esac
exit 0

